                        .module initializeplussome.c
                        .area text(rom, con, rel)
 0000                   .dbfile G:\mega48\initializeplussome.c
 0000                   .dbfunc e main _main fV
                        .even
 0000           _main::
 0000                   .dbline -1
 0000                   .dbline 69
 0000           ; //*************************************************************
 0000           ; //file name: testbench_atmega48_trial1.c
 0000           ; //function: provides test bench for ATMEL AVR ATmega48 controller
 0000           ; //target controller: ATMEL ATmega48
 0000           ; //
 0000           ; //ATMEL AVR ATmega48 Controller Pin Assignments
 0000           ; //Chip Port Function I/O Source/Dest Asserted Notes
 0000           ; //*************************************************************
 0000           ; //Pin 1 Reset
 0000           ; //*************************************************************
 0000           ; //Pin 1 PB0
 0000           ; //Pin 2 PB1
 0000           ; //Pin 3 PB2
 0000           ; //Pin 4 PB3
 0000           ; //Pin 5 PB4 
 0000           ; //Pin 6 PB5 
 0000           ; //Pin 7 PB6 
 0000           ; //Pin 8 PB7 
 0000           ; //Pin 9 Reset
 0000           ; //Pin 10 VDD
 0000           ; //Pin 11 Gnd
 0000           ; //Pin 12 Resonator
 0000           ; //Pin 13 Resonator
 0000           ; //Pin 14 PD0 to tristate LED indicator
 0000           ; //Pin 15 PD1 to tristate LED indicator
 0000           ; //Pin 16 PD2 to tristate LED indicator
 0000           ; //Pin 17 PD3 to tristate LED indicator
 0000           ; //Pin 18 PD4 
 0000           ; //Pin 19 PD5 
 0000           ; //Pin 20 PD6 
 0000           ; //Pin 21 PD7 
 0000           ; //Pin 22 PC0 to active high RC debounced switch
 0000           ; //Pin 23 PC1 to active high RC debounced switch
 0000           ; //Pin 24 PC2 to active high RC debounced switch
 0000           ; //Pin 25 PC3 to active high RC debounced switch
 0000           ; //Pin 26 PC4
 0000           ; //Pin 27 PC5
 0000           ; //Pin 28 PC6
 0000           ; //Pin 29 PC7
 0000           ; //Pin 30 AVcc to VDD
 0000           ; //Pin 31 AGnd to Ground
 0000           ; //Pin 32 ARef to Vcc
 0000           ; //Pin 33 PA7
 0000           ; //Pin 34 PA6
 0000           ; //Pin 35 PA5
 0000           ; //Pin 36 PA4
 0000           ; //Pin 37 PA3
 0000           ; //Pin 38 PA2
 0000           ; //Pin 39 PA1
 0000           ; //Pin 40 PA0
 0000           ; //
 0000           ; //orginal authors: Steven Barrett and Daniel Pack
 0000           ; //modifying author: Barry Blaha
 0000           ; //created: July 12, 2007
 0000           ; //last revised: February 25, 2008
 0000           ; //***************************************************************
 0000           ; //include files**************************************************
 0000           ; #include<iom48v.h>                            //ImageCraft ICC AVR
 0000           ;                                                               //include file
 0000           ; //for ATmega48
 0000           ; //function prototypes********************************************
 0000           ; void initialize_ports(void);  //initializes ports
 0000           ; void delay_5ms(void);
 0000           ; //main program***************************************************
 0000           ; //global variables
 0000           ; unsigned char i;              
 0000           ; //unsigned char j;
 0000           ; void main(void)
 0000           ; {
 0000                   .dbline 70
 0000           ; initialize_ports();                   //initialize ports
 0000 0AD0              rcall _initialize_ports
 0002 07C0              rjmp L3
 0004           L2:
 0004                   .dbline 72
 0004           ; 
 0004           ; while(1){//main loop
 0004                   .dbline 75
 0004           ;       
 0004           ;       
 0004           ;       delay_5ms();
 0004 11D0              rcall _delay_5ms
 0006                   .dbline 76
 0006           ;       PORTD=0x00;
 0006 2224              clr R2
 0008 2BB8              out 0xb,R2
 000A                   .dbline 77
 000A           ;       delay_5ms();
 000A 0ED0              rcall _delay_5ms
 000C                   .dbline 78
 000C           ;       PORTD=0xff;
 000C 8FEF              ldi R24,255
 000E 8BB9              out 0xb,R24
 0010                   .dbline 79
 0010           ;       delay_5ms();
 0010 0BD0              rcall _delay_5ms
 0012                   .dbline 92
 0012           ;       
 0012           ; 
 0012           ;       //new_PORTC = PINC;               //read PORTC
 0012           ;       //if(new_PORTC != old_PORTC){ //process change
 0012           ;       //              PORTD=new_PORTC;
 0012           ;       //  }                                           //end if new_PORTC
 0012           ;       //      old_PORTC=new_PORTC;    //update PORTC
 0012           ;       //for(j=0; j<255; j++)
 0012           ;       //{
 0012           ;               //PORTD=j;
 0012           ;               //delay_5ms();
 0012           ;       //}
 0012           ;       }                                                       //end while(1)
 0012           L3:
 0012                   .dbline 72
 0012 F8CF              rjmp L2
 0014           X0:
 0014                   .dbline -2
 0014           L1:
 0014                   .dbline 0 ; func end
 0014 0895              ret
 0016                   .dbend
 0016                   .dbfunc e initialize_ports _initialize_ports fV
                        .even
 0016           _initialize_ports::
 0016                   .dbline -1
 0016                   .dbline 101
 0016           ; }                                                             //end main
 0016           ; //***************************************************************
 0016           ; //function definitions
 0016           ; //***************************************************************
 0016           ; //***************************************************************
 0016           ; //initialize_ports: provides initial configuration for I/O ports
 0016           ; //***************************************************************
 0016           ; void initialize_ports(void)
 0016           ; {
 0016                   .dbline 103
 0016           ; 
 0016           ; DDRB=0xff;                                            //PORTB as output
 0016 8FEF              ldi R24,255
 0018 84B9              out 0x4,R24
 001A                   .dbline 104
 001A           ; PORTB=0x00;                                           //initialize PORTB low
 001A 2224              clr R2
 001C 25B8              out 0x5,R2
 001E                   .dbline 107
 001E           ;       //PORTB is not being used
 001E           ; 
 001E           ; DDRC=0x00;                                            //PORTC[7:0] as input
 001E 27B8              out 0x7,R2
 0020                   .dbline 108
 0020           ; PORTC=0x00;                                   //disable PORTC
 0020 28B8              out 0x8,R2
 0022                   .dbline 111
 0022           ;       //pull-up resistors
 0022           ; 
 0022           ; DDRD=0xff;                                            //set PORTD as output
 0022 8AB9              out 0xa,R24
 0024                   .dbline 112
 0024           ; PORTD=0xff;                                   //initialize hi
 0024 8BB9              out 0xb,R24
 0026                   .dbline -2
 0026           L5:
 0026                   .dbline 0 ; func end
 0026 0895              ret
 0028                   .dbend
 0028                   .dbfunc e delay_5ms _delay_5ms fV
                        .even
 0028           _delay_5ms::
 0028                   .dbline -1
 0028                   .dbline 118
 0028           ;       //port D is the output port with LEDS
 0028           ; }
 0028           ; //***************************************************************
 0028           ; 
 0028           ; void delay_5ms()
 0028           ; {
 0028                   .dbline 119
 0028           ;       for(i=0; i<400; i++){
 0028 2224              clr R2
 002A 20920000          sts _i,R2
 002E 06C0              rjmp L10
 0030           L7:
 0030                   .dbline 119
 0030                   .dbline 120
 0030           ;               asm("nop");
 0030 0000              nop
 0032                   .dbline 121
 0032           ;       }               
 0032           L8:
 0032                   .dbline 119
 0032 80910000          lds R24,_i
 0036 8F5F              subi R24,255    ; addi 1
 0038 80930000          sts _i,R24
 003C           L10:
 003C                   .dbline 119
 003C 80910000          lds R24,_i
 0040 8039              cpi R24,144
 0042 B0F3              brlo L7
 0044           X1:
 0044                   .dbline -2
 0044           L6:
 0044                   .dbline 0 ; func end
 0044 0895              ret
 0046                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile G:\mega48\initializeplussome.c
 0000           _i::
 0000                   .blkb 1
 0001                   .dbsym e i _i c
 0001           ; 
 0001           ; }
