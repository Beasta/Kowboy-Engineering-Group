                        .module justinitialize.c
                        .area text(rom, con, rel)
 0000                   .dbfile G:\mega48\justinitialize.c
                        .area data(ram, con, rel)
 0000                   .dbfile G:\mega48\justinitialize.c
 0000           _old_PORTC::
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data(ram, con, rel)
 0001                   .dbfile G:\mega48\justinitialize.c
 0001                   .dbsym e old_PORTC _old_PORTC c
                        .area text(rom, con, rel)
 0000                   .dbfile G:\mega48\justinitialize.c
 0000                   .dbfunc e main _main fV
                        .even
 0000           _main::
 0000                   .dbline -1
 0000                   .dbline 68
 0000           ; //*************************************************************
 0000           ; //file name: testbench_atmega48_trial1.c
 0000           ; //function: provides test bench for ATMEL AVR ATmega48 controller
 0000           ; //target controller: ATMEL ATmega48
 0000           ; //
 0000           ; //ATMEL AVR ATmega48 Controller Pin Assignments
 0000           ; //Chip Port Function I/O Source/Dest Asserted Notes
 0000           ; //*************************************************************
 0000           ; //Pin 1 Reset
 0000           ; //*************************************************************
 0000           ; //Pin 1 PB0
 0000           ; //Pin 2 PB1
 0000           ; //Pin 3 PB2
 0000           ; //Pin 4 PB3
 0000           ; //Pin 5 PB4 
 0000           ; //Pin 6 PB5 
 0000           ; //Pin 7 PB6 
 0000           ; //Pin 8 PB7 
 0000           ; //Pin 9 Reset
 0000           ; //Pin 10 VDD
 0000           ; //Pin 11 Gnd
 0000           ; //Pin 12 Resonator
 0000           ; //Pin 13 Resonator
 0000           ; //Pin 14 PD0 to tristate LED indicator
 0000           ; //Pin 15 PD1 to tristate LED indicator
 0000           ; //Pin 16 PD2 to tristate LED indicator
 0000           ; //Pin 17 PD3 to tristate LED indicator
 0000           ; //Pin 18 PD4 
 0000           ; //Pin 19 PD5 
 0000           ; //Pin 20 PD6 
 0000           ; //Pin 21 PD7 
 0000           ; //Pin 22 PC0 to active high RC debounced switch
 0000           ; //Pin 23 PC1 to active high RC debounced switch
 0000           ; //Pin 24 PC2 to active high RC debounced switch
 0000           ; //Pin 25 PC3 to active high RC debounced switch
 0000           ; //Pin 26 PC4
 0000           ; //Pin 27 PC5
 0000           ; //Pin 28 PC6
 0000           ; //Pin 29 PC7
 0000           ; //Pin 30 AVcc to VDD
 0000           ; //Pin 31 AGnd to Ground
 0000           ; //Pin 32 ARef to Vcc
 0000           ; //Pin 33 PA7
 0000           ; //Pin 34 PA6
 0000           ; //Pin 35 PA5
 0000           ; //Pin 36 PA4
 0000           ; //Pin 37 PA3
 0000           ; //Pin 38 PA2
 0000           ; //Pin 39 PA1
 0000           ; //Pin 40 PA0
 0000           ; //
 0000           ; //orginal authors: Steven Barrett and Daniel Pack
 0000           ; //modifying author: Barry Blaha
 0000           ; //created: July 12, 2007
 0000           ; //last revised: February 25, 2008
 0000           ; //***************************************************************
 0000           ; //include files**************************************************
 0000           ; #include<iom48v.h>                            //ImageCraft ICC AVR
 0000           ;                                                               //include file
 0000           ; //for ATmega48
 0000           ; //function prototypes********************************************
 0000           ; void initialize_ports(void);  //initializes ports
 0000           ; //main program***************************************************
 0000           ; //global variables
 0000           ; unsigned char old_PORTC = 0x00; //present value of PORTC
 0000           ; unsigned char new_PORTC;              //new values of PORTC
 0000           ; void main(void)
 0000           ; {
 0000                   .dbline 69
 0000           ; initialize_ports();                   //initialize ports
 0000 12D0              rcall _initialize_ports
 0002 0FC0              rjmp L3
 0004           L2:
 0004                   .dbline 70
 0004           ; while(1){//main loop
 0004                   .dbline 71
 0004           ;       new_PORTC = PINC;                       //read PORTC
 0004 26B0              in R2,0x6
 0006 20920000          sts _new_PORTC,R2
 000A                   .dbline 72
 000A           ;       if(new_PORTC != old_PORTC){ //process change
 000A 20900000          lds R2,_old_PORTC
 000E 30900000          lds R3,_new_PORTC
 0012 3214              cp R3,R2
 0014 11F0              breq L5
 0016           X0:
 0016                   .dbline 72
 0016                   .dbline 73
 0016           ;                       PORTD=PINC;
 0016 26B0              in R2,0x6
 0018 2BB8              out 0xb,R2
 001A                   .dbline 74
 001A           ;         }                                             //end if new_PORTC
 001A           L5:
 001A                   .dbline 75
 001A           ;               old_PORTC=new_PORTC;    //update PORTC
 001A 20900000          lds R2,_new_PORTC
 001E 20920000          sts _old_PORTC,R2
 0022                   .dbline 76
 0022           ;       }                                                       //end while(1)
 0022           L3:
 0022                   .dbline 70
 0022 F0CF              rjmp L2
 0024           X1:
 0024                   .dbline -2
 0024           L1:
 0024                   .dbline 0 ; func end
 0024 0895              ret
 0026                   .dbend
 0026                   .dbfunc e initialize_ports _initialize_ports fV
                        .even
 0026           _initialize_ports::
 0026                   .dbline -1
 0026                   .dbline 85
 0026           ; }                                                             //end main
 0026           ; //***************************************************************
 0026           ; //function definitions
 0026           ; //***************************************************************
 0026           ; //***************************************************************
 0026           ; //initialize_ports: provides initial configuration for I/O ports
 0026           ; //***************************************************************
 0026           ; void initialize_ports(void)
 0026           ; {
 0026                   .dbline 87
 0026           ; 
 0026           ; DDRB=0xff;                                            //PORTB as output
 0026 8FEF              ldi R24,255
 0028 84B9              out 0x4,R24
 002A                   .dbline 88
 002A           ; PORTB=0x00;                                           //initialize PORTB low
 002A 2224              clr R2
 002C 25B8              out 0x5,R2
 002E                   .dbline 91
 002E           ;       //PORTB is not being used
 002E           ; 
 002E           ; DDRC=0x00;                                            //PORTC[7:0] as input
 002E 27B8              out 0x7,R2
 0030                   .dbline 92
 0030           ; PORTC=0x00;                                   //disable PORTC
 0030 28B8              out 0x8,R2
 0032                   .dbline 95
 0032           ;       //pull-up resistors
 0032           ; 
 0032           ; DDRD=0xff;                                            //set PORTD as output
 0032 8AB9              out 0xa,R24
 0034                   .dbline 96
 0034           ; PORTD=0x00;                                   //initialize hi
 0034 2BB8              out 0xb,R2
 0036                   .dbline -2
 0036           L7:
 0036                   .dbline 0 ; func end
 0036 0895              ret
 0038                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile G:\mega48\justinitialize.c
 0000           _new_PORTC::
 0000                   .blkb 1
 0001                   .dbsym e new_PORTC _new_PORTC c
 0001           ;       //port D is the output port with LEDS
 0001           ; }
 0001           ; //***************************************************************
 0001           ; 
